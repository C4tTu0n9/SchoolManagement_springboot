-- MySQL Script generated by MySQL Workbench
-- Mon Oct 21 09:32:09 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema schoolmanagement
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema schoolmanagement
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `schoolmanagement` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`ChildAge`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ChildAge` (
  `id` INT NOT NULL,
  `name` VARCHAR(100) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`SchoolType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`SchoolType` (
  `id` INT NOT NULL,
  `name` VARCHAR(100) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`EducationMethod`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`EducationMethod` (
  `id` INT NOT NULL,
  `name` VARCHAR(100) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`address`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`address` (
  `id` INT NOT NULL,
  `province_id` VARCHAR(45) NULL,
  `district_id` VARCHAR(45) NULL,
  `wards_id` VARCHAR(45) NULL,
  `detail` TEXT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

USE `schoolmanagement` ;

-- -----------------------------------------------------
-- Table `schoolmanagement`.`utilities`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `schoolmanagement`.`utilities` (
  `amenity_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`amenity_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 6
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;


-- -----------------------------------------------------
-- Table `schoolmanagement`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `schoolmanagement`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(50) NOT NULL,
  `password_hash` VARCHAR(255) NOT NULL,
  `full_name` VARCHAR(100) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `dob` DATE NULL,
  `phone` VARCHAR(20) NULL DEFAULT NULL,
  `role` ENUM('admin', 'school_owner', 'parents') NOT NULL,
  `is_active` TINYINT(1) NULL DEFAULT '1',
  `address_id` INT NOT NULL,
  `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username` (`username` ASC) VISIBLE,
  UNIQUE INDEX `email` (`email` ASC) VISIBLE,
  INDEX `fk_parents_address1_idx` (`address_id` ASC) VISIBLE,
  CONSTRAINT `fk_parents_address1`
    FOREIGN KEY (`address_id`)
    REFERENCES `mydb`.`address` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;


-- -----------------------------------------------------
-- Table `schoolmanagement`.`school`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `schoolmanagement`.`school` (
  `school_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(200) NOT NULL,
  `SchoolType_id` INT NOT NULL,
  `email` VARCHAR(255) NULL,
  `phone` VARCHAR(10) NULL DEFAULT NULL,
  `address_id` INT NOT NULL,
  `ChildAge_id` INT NOT NULL,
  `EducationMethod_id` INT NOT NULL,
  `fee_to` INT NULL,
  `fee_from` INT NULL,
  `description` TEXT NULL DEFAULT NULL,
  `status` ENUM('draft', 'pending', 'approved', 'rejected', 'published', 'unpublished') NOT NULL,
  `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `published_at` TIMESTAMP NULL DEFAULT NULL,
  `accepted_by` INT NOT NULL,
  `created_by` INT NOT NULL,
  `url_img` VARCHAR(45) NULL,
  PRIMARY KEY (`school_id`, `SchoolType_id`, `ChildAge_id`, `EducationMethod_id`),
  INDEX `IX_School_Status` (`status` ASC) VISIBLE,
  INDEX `fk_school_SchoolType1_idx` (`SchoolType_id` ASC) VISIBLE,
  INDEX `fk_school_ChildAge1_idx` (`ChildAge_id` ASC) VISIBLE,
  INDEX `fk_school_EducationMethod1_idx` (`EducationMethod_id` ASC) VISIBLE,
  INDEX `fk_school_address1_idx` (`address_id` ASC) VISIBLE,
  INDEX `fk_school_users1_idx` (`accepted_by` ASC) VISIBLE,
  INDEX `fk_school_users2_idx` (`created_by` ASC) VISIBLE,
  CONSTRAINT `fk_school_SchoolType1`
    FOREIGN KEY (`SchoolType_id`)
    REFERENCES `mydb`.`SchoolType` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_school_ChildAge1`
    FOREIGN KEY (`ChildAge_id`)
    REFERENCES `mydb`.`ChildAge` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_school_EducationMethod1`
    FOREIGN KEY (`EducationMethod_id`)
    REFERENCES `mydb`.`EducationMethod` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_school_address1`
    FOREIGN KEY (`address_id`)
    REFERENCES `mydb`.`address` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_school_users1`
    FOREIGN KEY (`accepted_by`)
    REFERENCES `schoolmanagement`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_school_users2`
    FOREIGN KEY (`created_by`)
    REFERENCES `schoolmanagement`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;


-- -----------------------------------------------------
-- Table `schoolmanagement`.`counsellingrequest`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `schoolmanagement`.`counsellingrequest` (
  `request_id` INT NOT NULL AUTO_INCREMENT,
  `parent_id` INT NULL DEFAULT NULL,
  `school_id` INT NULL DEFAULT NULL,
  `full_name` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `phone` VARCHAR(45) NULL,
  `inquiry` TEXT NULL DEFAULT NULL,
  `status` ENUM('open', 'closed') NOT NULL,
  `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`request_id`),
  INDEX `school_id` (`school_id` ASC) VISIBLE,
  INDEX `parent_id` (`parent_id` ASC) VISIBLE,
  INDEX `IX_CounsellingRequest_Status` (`status` ASC) VISIBLE,
  CONSTRAINT `counsellingrequest_ibfk_1`
    FOREIGN KEY (`school_id`)
    REFERENCES `schoolmanagement`.`school` (`school_id`),
  CONSTRAINT `counsellingrequest_ibfk_2`
    FOREIGN KEY (`parent_id`)
    REFERENCES `schoolmanagement`.`users` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;


-- -----------------------------------------------------
-- Table `schoolmanagement`.`facility`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `schoolmanagement`.`facility` (
  `facility_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`facility_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 6
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;


-- -----------------------------------------------------
-- Table `schoolmanagement`.`schoolUtilities`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `schoolmanagement`.`schoolUtilities` (
  `school_amenity_id` INT NOT NULL AUTO_INCREMENT,
  `school_id` INT NULL DEFAULT NULL,
  `amenity_id` INT NULL DEFAULT NULL,
  PRIMARY KEY (`school_amenity_id`),
  UNIQUE INDEX `UC_SchoolAmenity` (`school_id` ASC, `amenity_id` ASC) VISIBLE,
  INDEX `IX_SchoolAmenity_SchoolId` (`school_id` ASC) VISIBLE,
  INDEX `IX_SchoolAmenity_AmenityId` (`amenity_id` ASC) VISIBLE,
  CONSTRAINT `schoolamenity_ibfk_1`
    FOREIGN KEY (`school_id`)
    REFERENCES `schoolmanagement`.`school` (`school_id`),
  CONSTRAINT `schoolamenity_ibfk_2`
    FOREIGN KEY (`amenity_id`)
    REFERENCES `schoolmanagement`.`utilities` (`amenity_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;


-- -----------------------------------------------------
-- Table `schoolmanagement`.`schoolenrollment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `schoolmanagement`.`schoolenrollment` (
  `enrollment_id` INT NOT NULL AUTO_INCREMENT,
  `school_id` INT NULL DEFAULT NULL,
  `parent_id` INT NULL DEFAULT NULL,
  `enrolled_date` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `status` ENUM('enroll', 'unenroll') NULL,
  PRIMARY KEY (`enrollment_id`),
  UNIQUE INDEX `UC_SchoolEnrollment` (`school_id` ASC, `parent_id` ASC) VISIBLE,
  INDEX `IX_SchoolEnrollment_SchoolId` (`school_id` ASC) VISIBLE,
  INDEX `IX_SchoolEnrollment_ParentId` (`parent_id` ASC) VISIBLE,
  CONSTRAINT `schoolenrollment_ibfk_1`
    FOREIGN KEY (`school_id`)
    REFERENCES `schoolmanagement`.`school` (`school_id`),
  CONSTRAINT `schoolenrollment_ibfk_2`
    FOREIGN KEY (`parent_id`)
    REFERENCES `schoolmanagement`.`users` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;


-- -----------------------------------------------------
-- Table `schoolmanagement`.`schoolfacility`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `schoolmanagement`.`schoolfacility` (
  `school_facility_id` INT NOT NULL AUTO_INCREMENT,
  `school_id` INT NULL DEFAULT NULL,
  `facility_id` INT NULL DEFAULT NULL,
  PRIMARY KEY (`school_facility_id`),
  UNIQUE INDEX `UC_SchoolFacility` (`school_id` ASC, `facility_id` ASC) VISIBLE,
  INDEX `IX_SchoolFacility_SchoolId` (`school_id` ASC) VISIBLE,
  INDEX `IX_SchoolFacility_FacilityId` (`facility_id` ASC) VISIBLE,
  CONSTRAINT `schoolfacility_ibfk_1`
    FOREIGN KEY (`school_id`)
    REFERENCES `schoolmanagement`.`school` (`school_id`),
  CONSTRAINT `schoolfacility_ibfk_2`
    FOREIGN KEY (`facility_id`)
    REFERENCES `schoolmanagement`.`facility` (`facility_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;


-- -----------------------------------------------------
-- Table `schoolmanagement`.`schoolrating`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `schoolmanagement`.`schoolrating` (
  `rating_id` INT NOT NULL AUTO_INCREMENT,
  `school_id` INT NULL DEFAULT NULL,
  `parent_id` INT NULL DEFAULT NULL,
  `rating_score_1` INT NULL DEFAULT NULL,
  `rating_score_2` INT NULL,
  `rating_score_3` INT NULL,
  `rating_score_4` INT NULL,
  `rating_score_5` INT NULL,
  `feedback` TEXT NULL DEFAULT NULL,
  `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`rating_id`),
  INDEX `school_id` (`school_id` ASC) VISIBLE,
  INDEX `parent_id` (`parent_id` ASC) VISIBLE,
  CONSTRAINT `schoolrating_ibfk_1`
    FOREIGN KEY (`school_id`)
    REFERENCES `schoolmanagement`.`school` (`school_id`),
  CONSTRAINT `schoolrating_ibfk_2`
    FOREIGN KEY (`parent_id`)
    REFERENCES `schoolmanagement`.`users` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;

USE `schoolmanagement` ;

-- -----------------------------------------------------
-- procedure sp_AddSchoolAmenity
-- -----------------------------------------------------

DELIMITER $$
USE `schoolmanagement`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_AddSchoolAmenity`(
    IN p_school_id INT,
    IN p_amenity_id INT,
    IN p_description TEXT,
    IN p_is_available BOOLEAN
)
BEGIN
    INSERT INTO SchoolAmenity (school_id, amenity_id, description, is_available)
    VALUES (p_school_id, p_amenity_id, p_description, p_is_available);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_AddSchoolFacility
-- -----------------------------------------------------

DELIMITER $$
USE `schoolmanagement`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_AddSchoolFacility`(
    IN p_school_id INT,
    IN p_facility_id INT,
    IN p_quantity INT,
    IN p_condition ENUM('new', 'good', 'fair', 'need_maintenance'),
    IN p_description TEXT
)
BEGIN
    INSERT INTO SchoolFacility (school_id, facility_id, quantity, `condition`, description)
    VALUES (p_school_id, p_facility_id, p_quantity, p_condition, p_description);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_GetSchoolDetails
-- -----------------------------------------------------

DELIMITER $$
USE `schoolmanagement`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_GetSchoolDetails`(IN school_id_param INT)
BEGIN
    -- Get school basic information
    SELECT s.*, u.full_name AS created_by_user
    FROM School s
    LEFT JOIN Users u ON s.created_by = u.user_id
    WHERE s.school_id = school_id_param;

    -- Get school ratings
    SELECT 
        AVG(rating_score) AS average_rating,
        COUNT(*) AS total_ratings
    FROM SchoolRating
    WHERE school_id = school_id_param;

    -- Get facilities and amenities
    CALL sp_GetSchoolFacilitiesAndAmenities(school_id_param);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_GetSchoolFacilitiesAndAmenities
-- -----------------------------------------------------

DELIMITER $$
USE `schoolmanagement`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_GetSchoolFacilitiesAndAmenities`(IN school_id_param INT)
BEGIN
    -- Get facilities
    SELECT 
        f.name AS facility_name,
        f.category AS facility_category,
        sf.quantity,
        sf.condition,
        sf.description AS facility_description
    FROM SchoolFacility sf
    INNER JOIN Facility f ON sf.facility_id = f.facility_id
    WHERE sf.school_id = school_id_param;

    -- Get amenities
    SELECT 
        a.name AS amenity_name,
        a.category AS amenity_category,
        sa.is_available,
        sa.description AS amenity_description
    FROM SchoolAmenity sa
    INNER JOIN Amenity a ON sa.amenity_id = a.amenity_id
    WHERE sa.school_id = school_id_param;
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
